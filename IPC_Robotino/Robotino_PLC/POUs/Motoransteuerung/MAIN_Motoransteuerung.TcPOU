<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.3">
  <POU Name="MAIN_Motoransteuerung" Id="{16a347dc-587d-4819-9a09-e734dabd6320}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN_Motoransteuerung
VAR
	//Achsen Referenzen
	axis1: AXIS_REF;
	axis2: AXIS_REF;
	axis3: AXIS_REF;
	
	//Objekte um Achsen anzusteuern
	powerAxis1: MC_Power;
	driveAxis1: MC_MoveVelocity;
	driveAxis12: MC_MoveVelocity;
	resetAxis1: MC_Reset;
	
	powerAxis2: MC_Power;
	driveAxis2: MC_MoveVelocity;
	driveAxis22: MC_MoveVelocity;
	resetAxis2: MC_Reset;
	
	powerAxis3: MC_Power;
	driveAxis3: MC_MoveVelocity;
	driveAxis32: MC_MoveVelocity;
	resetAxis3: MC_Reset;
	
	//Achse Freischalten, Regler Freischalten
	enableControl: BOOL	:=0;
	enablePos: BOOL		:=0;
	enableNeg: BOOL		:=0;
	override:  LREAL	:=0;
	
	//Fahrbefehl Ausführen
	driveExecute: BOOL	:=0;
	
	//State Maschine
	nextState:EnumState	:=EnumState.init;
	state:EnumState		:=EnumState.init;
	switchDrive:INT		:=0;
	
	//Umgerechnete Werte
	vX:		LREAL:=0;
	vY:		LREAL:=0;
	vTheta:	LREAL:=0;
	v0:		LREAL:=0;
	v1:		LREAL:=0;
	v2:		LREAL:=0;
	
	//Fahrbefehle für Motor MC_DRIVEVELOCITY
	velocityToMotor1: LREAL;
	velocityToMotor2: LREAL;
	velocityToMotor3: LREAL;
	directionToMotor1: INT;
	directionToMotor2: INT;
	directionToMotor3: INT;
	
	//Inputs: CartesianToMotors + Bumper
	
	vXCartesianToMotors 	AT%I*:LREAL;
	vYCartesianToMotors 	AT%I*:LREAL;
	vThetaCartesianToMotors AT%I*:LREAL;
	
	bumper	   AT%I*: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[axis1.ReadStatus();
axis2.ReadStatus();
axis3.ReadStatus();

// Konverzierung ToMotors Anfang********************************************************

//	  conversion from positive and / or negative longitudinal, lateral and
//	  rotational velocities(in milimeters per second) to three separate
//	  positive motor velocities(resolution: 1Byte) and their rotation
//    direction
//inputs:  	velocityX (longitudinal velocity in milimeters per second)
//         	velocityY (lateral velocity in milimeters per second)
//			theta     (rotational velocity in milimeters per second)
//outputs : velocityMotor0	
//			velocityMotor1
//			velocityMotor2
//		directionMotor0 (rotating direction of motor1, 1 := positiveDirection, 3 := negartiveDirection)
//		directionMotor1 (rotating direction of motor2, 1 := positiveDirection, 3 := negartiveDirection)
//		directionMotor2 (rotating direction of motor3, 1 := positiveDirection, 3 := negartiveDirection)
//conversion from longitudinal, lateral & rotational velocity to the
//three separate motor velocities


//Maximal Speed
IF 	vXCartesianToMotors > 500 	THEN
	vX := 500;
ELSIF vXCartesianToMotors < -500 THEN
	vX := -500;
ELSE
	vX := vXCartesianToMotors;
END_IF

IF	vYCartesianToMotors > 500	THEN
	vY := 500;
ELSIF vYCartesianToMotors < -500 THEN
	vY := -500;
ELSE
	vY :=vYCartesianToMotors;
END_IF
	
IF vThetaCartesianToMotors > 3.14 THEN
	vTheta:=3.14;
ELSIF vThetaCartesianToMotors < -3.14 THEN
	vTheta:=-3.14;	
ELSE
	vTheta:= vThetaCartesianToMotors;
END_IF

v0 := (-vX * COS(30.0*PI/180))	+ (vY * COS(60.0*PI/180))	+ (vTheta * 135.0);
v1 := 0.0						+ (-vY)						+ (vTheta * 135.0);
v2 := (vX * COS(30.0*PI/180))	+ (vY * COS(60.0*PI/180))	+ (vTheta * 135.0);
	
//division OF motor velocities into absolute velocity AND rotating
//direction
IF v0 < 0 THEN
	directionToMotor1 := 1;
	velocityToMotor1 := -v0;
ELSE
	directionToMotor1:= 3;
	velocityToMotor1:= v0;
END_IF

IF v1 < 0 THEN
	directionToMotor2:= 1;
	velocityToMotor2:= -v1;
ELSE
	directionToMotor2:= 3;
	velocityToMotor2:= v1;
END_IF

IF(v2 < 0)THEN
	directionToMotor3 := 1;
	velocityToMotor3  := -v2;
ELSE
	directionToMotor3 := 3;
	velocityToMotor3  := v2;
END_IF
// Konverzierung ToMotors ENDE********************************************************


//START STATE MACHINE MOTORANSTEUERUNG
CASE state OF
	EnumState.init:
		enableControl:=1;
		enablePos:=1;
		enableNeg:=1;
		override:=100;
		
		powerAxis1(Axis:=axis1,Enable:=enableControl,Enable_Positive:=enablePos,Enable_Negative:=enableNeg,Override:=override);
		powerAxis2(Axis:=axis2,Enable:=enableControl,Enable_Positive:=enablePos,Enable_Negative:=enableNeg,Override:=override);
		powerAxis3(Axis:=axis3,Enable:=enableControl,Enable_Positive:=enablePos,Enable_Negative:=enableNeg,Override:=override);
		IF (powerAxis1.Status AND powerAxis2.Status AND powerAxis3.Status) THEN	
			nextState:=EnumState.drive1; 
			driveExecute:=1;
		END_IF
		IF (powerAxis1.Error OR powerAxis2.Error OR powerAxis3.Error) THEN
			nextState:=EnumState.reset;
		END_IF
		
	EnumState.drive1:
	
		driveAxis1(Axis:=axis1,Velocity:=velocityToMotor1,Direction:=directionToMotor1,Execute:=driveExecute,BufferMode:=MC_Aborting);
		driveAxis2(Axis:=axis2,Velocity:=velocityToMotor2,Direction:=directionToMotor2,Execute:=driveExecute,BufferMode:=MC_Aborting);
		driveAxis3(Axis:=axis3,Velocity:=velocityToMotor3,Direction:=directionToMotor3,Execute:=driveExecute,BufferMode:=MC_Aborting);
		switchDrive:=switchDrive+1;
		
		IF (switchDrive=2) THEN
			switchDrive:=0;
			nextState:=EnumState.drive2;
			driveExecute:=0;
			driveAxis1(Axis:=axis1,Execute:=driveExecute);
			driveAxis2(Axis:=axis2,Execute:=driveExecute);
			driveAxis3(Axis:=axis3,Execute:=driveExecute);
			driveExecute:=1;
		END_IF
		
		IF (powerAxis1.Error OR powerAxis2.Error OR powerAxis3.Error) THEN
			nextState:=EnumState.reset;
		END_IF
		
	EnumState.drive2:
	
		driveAxis1(Axis:=axis1,Velocity:=velocityToMotor1,Direction:=directionToMotor1,Execute:=driveExecute,BufferMode:=MC_Aborting);
		driveAxis2(Axis:=axis2,Velocity:=velocityToMotor2,Direction:=directionToMotor2,Execute:=driveExecute,BufferMode:=MC_Aborting);
		driveAxis3(Axis:=axis3,Velocity:=velocityToMotor3,Direction:=directionToMotor3,Execute:=driveExecute,BufferMode:=MC_Aborting);
		switchDrive:=switchDrive+1;
		
		IF (switchDrive=2) THEN
			switchDrive:=0;
			nextState:=EnumState.drive1;
			driveExecute:=0;
			driveAxis1(Axis:=axis1,Execute:=driveExecute);
			driveAxis2(Axis:=axis2,Execute:=driveExecute);
			driveAxis3(Axis:=axis3,Execute:=driveExecute);
			driveExecute:=1;
		END_IF
		IF (powerAxis1.Error OR powerAxis2.Error OR powerAxis3.Error OR bumper) THEN
			nextState:=EnumState.reset;
		END_IF	
	EnumState.reset:
	
		powerAxis1(Axis:=axis1,Enable:=0,Enable_Positive:=0,Enable_Negative:=0,Override:=0);
		powerAxis2(Axis:=axis1,Enable:=0,Enable_Positive:=0,Enable_Negative:=0,Override:=0);
		powerAxis3(Axis:=axis1,Enable:=0,Enable_Positive:=0,Enable_Negative:=0,Override:=0);
		driveAxis1(Axis:=axis1,Velocity:=0,Direction:=0,Execute:=0,BufferMode:=MC_Aborting);
		driveAxis2(Axis:=axis1,Velocity:=0,Direction:=0,Execute:=0,BufferMode:=MC_Aborting);
		driveAxis3(Axis:=axis1,Velocity:=0,Direction:=0,Execute:=0,BufferMode:=MC_Aborting);
	
		resetAxis1(Axis:=axis1,Execute:=1);
		resetAxis2(Axis:=axis2,Execute:=1);
		resetAxis3(Axis:=axis3,Execute:=1);
	
		IF (resetAxis1.Done AND resetAxis2.Done AND resetAxis3.Done) THEN
					;
				END_IF	
	ELSE
		nextState:=EnumState.reset;
END_CASE
state:=nextState;]]></ST>
    </Implementation>
    <LineIds Name="MAIN_Motoransteuerung">
      <LineId Id="2" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="174" Count="0" />
      <LineId Id="723" Count="1" />
      <LineId Id="643" Count="4" />
      <LineId Id="649" Count="2" />
      <LineId Id="653" Count="2" />
      <LineId Id="657" Count="2" />
      <LineId Id="662" Count="1" />
      <LineId Id="725" Count="0" />
      <LineId Id="664" Count="0" />
      <LineId Id="666" Count="1" />
      <LineId Id="747" Count="1" />
      <LineId Id="819" Count="0" />
      <LineId Id="818" Count="0" />
      <LineId Id="671" Count="4" />
      <LineId Id="677" Count="0" />
      <LineId Id="823" Count="0" />
      <LineId Id="822" Count="0" />
      <LineId Id="678" Count="0" />
      <LineId Id="746" Count="0" />
      <LineId Id="680" Count="2" />
      <LineId Id="825" Count="0" />
      <LineId Id="827" Count="0" />
      <LineId Id="683" Count="0" />
      <LineId Id="685" Count="1" />
      <LineId Id="688" Count="4" />
      <LineId Id="695" Count="1" />
      <LineId Id="698" Count="2" />
      <LineId Id="702" Count="2" />
      <LineId Id="706" Count="0" />
      <LineId Id="754" Count="0" />
      <LineId Id="707" Count="3" />
      <LineId Id="712" Count="7" />
      <LineId Id="721" Count="1" />
      <LineId Id="638" Count="1" />
      <LineId Id="642" Count="0" />
      <LineId Id="756" Count="0" />
      <LineId Id="362" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="363" Count="0" />
      <LineId Id="406" Count="2" />
      <LineId Id="404" Count="1" />
      <LineId Id="401" Count="1" />
      <LineId Id="409" Count="0" />
      <LineId Id="415" Count="0" />
      <LineId Id="430" Count="0" />
      <LineId Id="442" Count="0" />
      <LineId Id="431" Count="0" />
      <LineId Id="416" Count="0" />
      <LineId Id="432" Count="1" />
      <LineId Id="414" Count="0" />
      <LineId Id="365" Count="0" />
      <LineId Id="460" Count="0" />
      <LineId Id="419" Count="0" />
      <LineId Id="421" Count="0" />
      <LineId Id="548" Count="0" />
      <LineId Id="566" Count="0" />
      <LineId Id="527" Count="0" />
      <LineId Id="557" Count="0" />
      <LineId Id="525" Count="0" />
      <LineId Id="528" Count="0" />
      <LineId Id="532" Count="2" />
      <LineId Id="547" Count="0" />
      <LineId Id="546" Count="0" />
      <LineId Id="524" Count="0" />
      <LineId Id="475" Count="0" />
      <LineId Id="437" Count="1" />
      <LineId Id="420" Count="0" />
      <LineId Id="470" Count="0" />
      <LineId Id="366" Count="0" />
      <LineId Id="466" Count="0" />
      <LineId Id="463" Count="1" />
      <LineId Id="461" Count="0" />
      <LineId Id="567" Count="0" />
      <LineId Id="536" Count="0" />
      <LineId Id="559" Count="0" />
      <LineId Id="537" Count="0" />
      <LineId Id="539" Count="3" />
      <LineId Id="550" Count="1" />
      <LineId Id="467" Count="0" />
      <LineId Id="471" Count="0" />
      <LineId Id="468" Count="0" />
      <LineId Id="462" Count="0" />
      <LineId Id="583" Count="0" />
      <LineId Id="578" Count="0" />
      <LineId Id="584" Count="1" />
      <LineId Id="573" Count="0" />
      <LineId Id="587" Count="1" />
      <LineId Id="581" Count="0" />
      <LineId Id="577" Count="0" />
      <LineId Id="568" Count="0" />
      <LineId Id="574" Count="1" />
      <LineId Id="569" Count="0" />
      <LineId Id="571" Count="1" />
      <LineId Id="368" Count="0" />
      <LineId Id="367" Count="0" />
      <LineId Id="458" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="356" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>